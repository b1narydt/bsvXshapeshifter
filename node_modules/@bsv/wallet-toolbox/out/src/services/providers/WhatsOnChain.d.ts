import { Beef, HexString, WhatsOnChainConfig } from '@bsv/sdk';
import { sdk } from '../../index.client';
import SdkWhatsOnChain from './SdkWhatsOnChain';
/**
 *
 */
export declare class WhatsOnChain extends SdkWhatsOnChain {
    constructor(chain?: sdk.Chain, config?: WhatsOnChainConfig);
    /**
     * 2025-02-16 throwing internal server error 500.
     * @param txid
     * @returns
     */
    getTxPropagation(txid: string): Promise<number>;
    /**
     * May return undefined for unmined transactions that are in the mempool.
     * @param txid
     * @returns raw transaction as hex string or undefined if txid not found in mined block.
     */
    getRawTx(txid: string): Promise<string | undefined>;
    getRawTxResult(txid: string): Promise<sdk.GetRawTxResult>;
    /**
     * WhatsOnChain does not natively support a postBeef end-point aware of multiple txids of interest in the Beef.
     *
     * Send rawTx in `txids` order from beef.
     *
     * @param beef
     * @param txids
     * @returns
     */
    postBeef(beef: Beef, txids: string[]): Promise<sdk.PostBeefResult>;
    /**
     * @param rawTx raw transaction to broadcast as hex string
     * @returns txid returned by transaction processor of transaction broadcast
     */
    postRawTx(rawTx: HexString): Promise<sdk.PostTxResultForTxid>;
    /**
     * @param txid
     * @returns
     */
    getMerklePath(txid: string, services: sdk.WalletServices): Promise<sdk.GetMerklePathResult>;
    updateBsvExchangeRate(rate?: sdk.BsvExchangeRate, updateMsecs?: number): Promise<sdk.BsvExchangeRate>;
    getUtxoStatus(output: string, outputFormat?: sdk.GetUtxoStatusOutputFormat): Promise<sdk.GetUtxoStatusResult>;
}
//# sourceMappingURL=WhatsOnChain.d.ts.map