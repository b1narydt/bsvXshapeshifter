import { CreateActionResult, SendWithResult, SignActionSpend } from '@bsv/sdk';
import { Script, Transaction } from '@bsv/sdk';
import { PendingSignAction, sdk, Wallet } from '../../index.client';
export declare function createAction(wallet: Wallet, auth: sdk.AuthId, vargs: sdk.ValidCreateActionArgs): Promise<CreateActionResult>;
/**
 * Derive a change output locking script
 */
export declare function makeChangeLock(out: sdk.StorageCreateTransactionSdkOutput, dctr: sdk.StorageCreateActionResult, args: sdk.ValidCreateActionArgs, changeKeys: sdk.KeyPair, wallet: Wallet): Script;
export declare function completeSignedTransaction(prior: PendingSignAction, spends: Record<number, SignActionSpend>, wallet: Wallet): Promise<Transaction>;
export declare function processAction(prior: PendingSignAction | undefined, wallet: Wallet, auth: sdk.AuthId, vargs: sdk.ValidProcessActionArgs): Promise<SendWithResult[] | undefined>;
//# sourceMappingURL=createAction.d.ts.map