"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyToken = void 0;
const sdk_1 = require("@bsv/sdk");
/**
 * Verifies the BRC-48 locking key and the signature.
 * @private
 * @param identityKey - The BRC-31 identity key of the advertiser.
 * @param lockingPublicKey - The public key used in the output's locking script.
 * @param fields - The fields of the token.
 * @param signature - The signature over the token fields.
 * @param protocolId - The protocol ID (e.g., 'SHIP' or 'SLAP').
 * @throws Will throw an error if the locking key or signature is invalid.
 */
const verifyToken = (identityKey, lockingPublicKey, fields, signature) => {
    const hasValidSignature = lockingPublicKey.verify(fields.reduce((a, e) => [...a, ...e], []), sdk_1.Signature.fromDER(signature, 'hex'));
    if (!hasValidSignature)
        throw new Error('Invalid signature!');
};
exports.verifyToken = verifyToken;
//# sourceMappingURL=verifyToken.js.map