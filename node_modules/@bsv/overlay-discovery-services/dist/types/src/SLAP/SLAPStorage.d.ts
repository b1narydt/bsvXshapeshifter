import { Db } from 'mongodb';
import { UTXOReference } from 'src/types.js';
/**
 * Implements a storage engine for SLAP protocol
 */
export declare class SLAPStorage {
    private readonly db;
    private readonly slapRecords;
    /**
     * Constructs a new SLAPStorage instance
     * @param {Db} db - connected mongo database instance
     */
    constructor(db: Db);
    /**
     * Ensures the necessary indexes are created for the collections.
     */
    ensureIndexes(): Promise<void>;
    /**
     * Stores a SLAP record
     * @param {string} txid transaction id
     * @param {number} outputIndex index of the UTXO
     * @param {string} identityKey identity key
     * @param {string} domain domain name
     * @param {string} service service name
     */
    storeSLAPRecord(txid: string, outputIndex: number, identityKey: string, domain: string, service: string): Promise<void>;
    /**
     * Deletes a SLAP record
     * @param {string} txid transaction id
     * @param {number} outputIndex index of the UTXO
     */
    deleteSLAPRecord(txid: string, outputIndex: number): Promise<void>;
    /**
     * Finds SLAP records based on a given query object.
     * @param {Object} query The query object which may contain properties for domain or service.
     * @returns {Promise<UTXOReference[]>} returns matching UTXO references
     */
    findRecord(query: {
        domain?: string;
        service?: string;
    }): Promise<UTXOReference[]>;
    /**
    * Returns all results tracked by the overlay
    * @returns {Promise<UTXOReference[]>} returns matching UTXO references
    */
    findAll(): Promise<UTXOReference[]>;
}
//# sourceMappingURL=SLAPStorage.d.ts.map