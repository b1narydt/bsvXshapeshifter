declare const _default: "# SLAP Lookup Service\n\n**Protocol Name**: SLAP (Service Lookup Availability Protocol)  \n**Lookup Service Name**: `SLAPLookupService`\n\n---\n\n## Overview\n\nThe SLAP Lookup Service is an overlay component that answers queries about SLAP advertisements. A SLAP advertisement states that an identity key offers a service (prefixed `ls_`) at a given URI. By querying this service, you can find all known SLAP records that match your criteria.\n\n---\n\n## Purpose\n\n- **Discovery**: Find all services that have been advertised with the `SLAP` protocol.\n- **Filtering**: Narrow results by domain or by the `ls_` service name.\n\n---\n\n## How to Query the SLAP Lookup Service\n\nYou will typically provide a [LookupQuestion](https://www.npmjs.com/package/@bsv/overlay#lookupservice) object to the `lookup` method with:\n- `question.service = 'ls_slap'`\n- `question.query` describing the domain and/or service name you want.\n\n### `question.query` Options\n\n1. **`\"findAll\"`** (string literal): Returns every SLAP record in the database.\n2. **`SLAPQuery` object**:\n   ```ts\n   interface SLAPQuery {\n     domain?: string\n     service?: string\n   }\n   ```\n   - `domain`: Optional. If provided, only returns records whose `advertisedURI` matches this domain.\n   - `service`: Optional. Must be a string starting with `ls_`.\n\n### Example Usages\n\n1. **Find all**:\n   ```js\n   const question = {\n     service: 'ls_slap',\n     query: 'findAll'\n   }\n   const answers = await overlayClient.lookup(question)\n   ```\n\n2. **Find by domain**:\n   ```js\n   const question = {\n     service: 'ls_slap',\n     query: { domain: 'https://mylookup.example' }\n   }\n   const answers = await overlayClient.lookup(question)\n   ```\n\n3. **Find by service (most common)**:\n   ```js\n   const question = {\n     service: 'ls_slap',\n     query: { service: 'ls_treasury' }\n   }\n   const answers = await overlayClient.lookup(question)\n   ```\n\n4. **Find by domain & service**:\n   ```js\n   const question = {\n     service: 'ls_slap',\n     query: {\n       domain: 'https://mylookup.example',\n       service: 'ls_treasury'\n     }\n   }\n   const answers = await overlayClient.lookup(question)\n   ```\n\n---\n\n## Gotchas\n\n- **Strict Matching**: Domain matching requires an exact string match. If you have a different protocol (https vs https+bsvauth vs https+bsvauth+smf), be sure to store/lookup accordingly.\n- **Must Start with `ls_`**: The `service` field in the original SLAP advertisement must begin with `ls_`. If you query for something that doesn\u2019t match exactly, you may get zero results.\n\n---\n\n## Further Reading\n\n- **SLAPTopicManager**: Learn how SLAP outputs are detected and admitted.\n- **BRC-101 Overlays**: The higher-level specification for modular overlay availability schemes.\n";
export default _default;
//# sourceMappingURL=SLAPLookup.docs.d.ts.map