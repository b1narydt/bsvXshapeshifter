import { AdmittanceInstructions, TopicManager } from '@bsv/overlay';
/**
 * ðŸš¢ SHIP Topic Manager
 * Implements the TopicManager interface for SHIP (Service Host Interconnect Protocol) tokens.
 *
 * The SHIP Topic Manager identifies admissible outputs based on SHIP protocol requirements.
 * SHIP tokens facilitate the advertisement of nodes hosting specific topics within the overlay network.
 */
export declare class SHIPTopicManager implements TopicManager {
    /**
     * Identifies admissible outputs for SHIP tokens.
     * @param beef - The transaction data in BEEF format.
     * @param previousCoins - The previous coins to consider.
     * @returns A promise that resolves with the admittance instructions.
     */
    identifyAdmissibleOutputs(beef: number[], previousCoins: number[]): Promise<AdmittanceInstructions>;
    /**
     * Returns documentation specific to the SHIP topic manager.
     * @returns A promise that resolves to the documentation string.
     */
    getDocumentation(): Promise<string>;
    /**
     * Returns metadata associated with this topic manager.
     * @returns A promise that resolves to an object containing metadata.
     */
    getMetaData(): Promise<{
        name: string;
        shortDescription: string;
        iconURL?: string;
        version?: string;
        informationURL?: string;
    }>;
}
//# sourceMappingURL=SHIPTopicManager.d.ts.map