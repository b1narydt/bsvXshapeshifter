import { LookupService, LookupQuestion, LookupAnswer, LookupFormula } from '@bsv/overlay';
import { SHIPStorage } from './SHIPStorage.js';
import { Script } from '@bsv/sdk';
/**
 * Implements the SHIP lookup service
 *
 * The SHIP lookup service allows querying for overlay services hosting specific topics
 * within the overlay network.
 */
export declare class SHIPLookupService implements LookupService {
    storage: SHIPStorage;
    constructor(storage: SHIPStorage);
    /**
     * Handles the addition of a new output to the topic.
     * @param txid - The transaction ID containing the output.
     * @param outputIndex - The index of the output in the transaction.
     * @param outputScript - The script of the output to be processed.
     * @param topic - The topic associated with the output.
     */
    outputAdded?(txid: string, outputIndex: number, outputScript: Script, topic: string): Promise<void>;
    /**
     * Handles the spending of an output in the topic.
     * @param txid - The transaction ID of the spent output.
     * @param outputIndex - The index of the spent output.
     * @param topic - The topic associated with the spent output.
     */
    outputSpent?(txid: string, outputIndex: number, topic: string): Promise<void>;
    /**
     * Handles the deletion of an output in the topic.
     * @param txid - The transaction ID of the deleted output.
     * @param outputIndex - The index of the deleted output.
     * @param topic - The topic associated with the deleted output.
     */
    outputDeleted?(txid: string, outputIndex: number, topic: string): Promise<void>;
    /**
     * Answers a lookup query.
     * @param question - The lookup question to be answered.
     * @returns A promise that resolves to a lookup answer or formula.
     */
    lookup(question: LookupQuestion): Promise<LookupAnswer | LookupFormula>;
    /**
     * Returns documentation specific to this overlay lookup service.
     * @returns A promise that resolves to the documentation string.
     */
    getDocumentation(): Promise<string>;
    /**
     * Returns metadata associated with this lookup service.
     * @returns A promise that resolves to an object containing metadata.
     */
    getMetaData(): Promise<{
        name: string;
        shortDescription: string;
        iconURL?: string;
        version?: string;
        informationURL?: string;
    }>;
}
//# sourceMappingURL=SHIPLookupService.d.ts.map