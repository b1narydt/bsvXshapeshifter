"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StorageSyncReader = void 0;
const index_client_1 = require("../index.client");
/**
 * The `StorageSyncReader` non-abstract class must be used when authentication checking access to the methods of a `StorageBaseReader` is required.
 *
 * Constructed from an `auth` object that must minimally include the authenticated user's identityKey,
 * and the `StorageBaseReader` to be protected.
 */
class StorageSyncReader {
    constructor(auth, storage) {
        this.auth = auth;
        this.storage = storage;
    }
    async makeAvailable() {
        await this.storage.makeAvailable();
        if (this.auth.userId === undefined) {
            const user = await this.storage.findUserByIdentityKey(this.auth.identityKey);
            if (!user)
                throw new index_client_1.sdk.WERR_UNAUTHORIZED();
            this.auth.userId = user.userId;
        }
        return this.storage.getSettings();
    }
    destroy() {
        return this.storage.destroy();
    }
    async getSyncChunk(args) {
        if (!this.auth.userId)
            await this.makeAvailable();
        if (args.identityKey !== this.auth.identityKey)
            throw new index_client_1.sdk.WERR_UNAUTHORIZED();
        return await this.storage.getSyncChunk(args);
    }
}
exports.StorageSyncReader = StorageSyncReader;
//# sourceMappingURL=StorageSyncReader.js.map